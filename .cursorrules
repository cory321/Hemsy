# Hemsy - Cursor Project Rules

## Project Context

You are working on **Hemsy**, a web application for seamstresses and tailoring businesses.

### 📋 **ALWAYS READ THESE FIRST:**

- `PRD.md` - Complete Product Requirements Document with features, user flows, and implementation roadmap

### 🎯 **Core Project Info:**

- **Tech Stack**: Next.js 15+ (App Router), TypeScript, Material UI, Supabase, Clerk Auth, Stripe
- **Target Users**: Solo seamstresses, small-to-medium tailoring shops, alteration businesses
- **Key Features**: Clients, Orders, Garments, Appointments, Services, Invoices, Settings
- **Runtime**: Node.js 22.17.1 (LTS)

### 🏗️ **Architecture Principles:**

- Server Actions for backend logic
- Supabase RLS for data security
- Optimistic UI patterns

### 📁 **Key File References:**

- Environment variables live in .env.local and are not available to you. When you need access to them, please ask for them.

### 🔧 **Development Guidelines:**

1. **ALWAYS** reference the PRD docs before making suggestions
2. Use Server Actions for data operations
3. Implement proper error handling and loading states
4. Ensure accessibility (WCAG 2.1 AA compliance)
5. Use TypeScript strictly
6. **MANDATORY**: Write tests alongside all feature implementations

### 📝 **Commit Messages:**

- **Max 200 chars**
- Use imperative mood
- Be specific about WHAT and WHY
- Examples: "Add client search with debounced input", "Fix overlapping appointment times bug"

### 🧪 **Testing Requirements (MANDATORY):**

- Write tests **ALONGSIDE** features
- Minimum 80% coverage for business logic
- Test all Server Actions, components, and critical user flows
- Ensure WCAG 2.1 AA accessibility compliance

**Stack**: Jest, React Testing Library, Playwright, axe-core

### **Quick Commands:**

- Check database: Use Supabase MCP server
- Check GitHub: Use GitHub MCP server

### **Context7 Documentation:**

Use Context7 MCP tool for up-to-date docs on: Next.js 15+, TypeScript, Material UI, Supabase, Clerk, Stripe, Jest, React Testing Library, Playwright.

**Usage**: First resolve library ID, then get docs with specific topic.

### **Important Notes:**

- All user data must respect Supabase RLS policies
- Payment processing uses Stripe Connect
- Email via Resend, SMS via Twilio (future)

---

**Remember**: Every decision should prioritize user experience, performance, and reliability.
